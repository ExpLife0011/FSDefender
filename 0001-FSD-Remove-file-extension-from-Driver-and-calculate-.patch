From aa6287c0285141808828ccd2c1bc036e2501a0f3 Mon Sep 17 00:00:00 2001
From: Alexander Gurevich <guran1996@gmail.com>
Date: Fri, 22 Jun 2018 20:59:05 +0300
Subject: [PATCH] [FSD] Remove file extension from Driver and calculate it in
 Manager

Signed-off-by: Alexander Gurevich <guran1996@gmail.com>
---
 FSDCommonDefs/FSDCommonDefs.h     |  21 ---------------------
 FSDManager/FSDManager.cpp         | Bin 33080 -> 33202 bytes
 FSDUmCommonUtils/FSDUmFileUtils.h |  23 ++++++++++++++++++++++-
 FSDefender/CFSDefender.cpp        |   4 ----
 FSDefender/CFSDefender.h          |  26 ++++----------------------
 5 files changed, 26 insertions(+), 48 deletions(-)

diff --git a/FSDCommonDefs/FSDCommonDefs.h b/FSDCommonDefs/FSDCommonDefs.h
index be3d0e3..ef26db8 100644
--- a/FSDCommonDefs/FSDCommonDefs.h
+++ b/FSDCommonDefs/FSDCommonDefs.h
@@ -44,8 +44,6 @@ enum IRP_MAJOR_TYPE
 #pragma warning(disable : 4200)  // zero sized array
 struct FSD_OPERATION_GENERAL
 {
-    WCHAR  wszFileExtention[MAX_FILE_EXTENTION_LENGTH];
-
     size_t cbFileName;
     BYTE   pFileName[];
 
@@ -61,8 +59,6 @@ struct FSD_OPERATION_WRITE
     double dWriteEntropy;
     bool   fWriteEntropyCalculated;
 
-    WCHAR  wszFileExtention[MAX_FILE_EXTENTION_LENGTH];
-
     size_t cbFileName;
     BYTE   pFileName[];
 
@@ -78,8 +74,6 @@ struct FSD_OPERATION_READ
     double dReadEntropy;
     bool   fReadEntropyCalculated;
 
-    WCHAR  wszFileExtention[MAX_FILE_EXTENTION_LENGTH];
-
     size_t cbFileName;
     BYTE   pFileName[];
 
@@ -179,11 +173,6 @@ struct FSD_OPERATION_DESCRIPTION
         }
     }
 
-    void SetFileExtention(LPCWSTR wszFileExtention, size_t cbFileExtention)
-    {
-        memcpy(GetFileExtention(), wszFileExtention, cbFileExtention);
-    }
-
     void SetFileName(LPCWSTR wszFileName, size_t cbFileName)
     {
         memcpy(GetFileName(), wszFileName, cbFileName);
@@ -212,16 +201,6 @@ struct FSD_OPERATION_DESCRIPTION
         }
     }
 
-    LPWSTR GetFileExtention()
-    {
-        if (uMajorType == IRP_WRITE)
-        {
-            return ((FSD_OPERATION_WRITE*)pData)->wszFileExtention;
-        }
-
-        return ((FSD_OPERATION_GENERAL*)pData)->wszFileExtention;
-    }
-
     LPWSTR GetFileName()
     {
         switch (uMajorType)
diff --git a/FSDManager/FSDManager.cpp b/FSDManager/FSDManager.cpp
index 0382446fd7320ca3a843ac501dc6379fd6247f02..b37bb93dbb8b429f2e4fee9f13eefc51955e87c0 100644
GIT binary patch
delta 95
zcmdnd#I&iIX+ufK<TMSr$*a_bxD^;|859`Y8B!TaCNET%W_M#KV#sI6oqRD^c=DED
qqshk-1tvvvO|A<GVl8JVW~c%wV$_-Z-&YaApZqCUZgWTI25kVZC?B){

delta 58
zcmdng%(SD4X+ufK<f>?{$p)c8lVgI_Ca+Q#V%A{LoV+kpdGZz{{>NbX$rhnPn?=Ir
GX#)Uq9TYwQ

diff --git a/FSDUmCommonUtils/FSDUmFileUtils.h b/FSDUmCommonUtils/FSDUmFileUtils.h
index 7bd55e0..ab45186 100644
--- a/FSDUmCommonUtils/FSDUmFileUtils.h
+++ b/FSDUmCommonUtils/FSDUmFileUtils.h
@@ -86,4 +86,25 @@ public:
 private:
     CAutoStringW m_wszName;
     HANDLE       m_hFile;
-};
\ No newline at end of file
+};
+
+LPCWSTR GetFileExtentionFromFileName(LPWSTR wszFileName)
+{
+    LPWSTR pLastPoint = NULL;
+
+    size_t cSymbol = 0;
+    for (;;)
+    {
+        if (wszFileName[cSymbol] == L'\0')
+        {
+            break;
+        }
+
+        if (wszFileName[cSymbol] == L'.')
+        {
+            pLastPoint = wszFileName + cSymbol;
+        }
+    }
+
+    return pLastPoint;
+}
\ No newline at end of file
diff --git a/FSDefender/CFSDefender.cpp b/FSDefender/CFSDefender.cpp
index e47583e..088b8ce 100644
--- a/FSDefender/CFSDefender.cpp
+++ b/FSDefender/CFSDefender.cpp
@@ -104,7 +104,6 @@ void CFSDefender::FillOperationDescription(FSD_OPERATION_DESCRIPTION* pOpDescrip
     pOpDescription->uMinorType = pIrpOp->m_uIrpMinorCode;
     pOpDescription->uPid       = pIrpOp->m_uPid;
     pOpDescription->SetFileName((LPCWSTR)pIrpOp->m_pFileName.Get(), pIrpOp->m_cbFileName);
-    pOpDescription->SetFileExtention(pIrpOp->m_wszFileExtention, sizeof(pIrpOp->m_wszFileExtention));
     pOpDescription->fCheckForDelete = pIrpOp->m_fCheckForDelete;
 
     //
@@ -451,9 +450,6 @@ NTSTATUS CFSDefender::ProcessPreIrp(PFLT_CALLBACK_DATA pData, PCFLT_RELATED_OBJE
         hr = pItem->SetFileName(wszFileName.Get(), cbFileName);
         RETURN_IF_FAILED(hr);
 
-        hr = pItem->SetFileExtention(pNameInfo->Extension.Buffer, pNameInfo->Extension.Length + sizeof(WCHAR));
-        RETURN_IF_FAILED(hr);
-            
         m_aIrpOpsQueue.Push(pItem.LetPtr());
     }
     else
diff --git a/FSDefender/CFSDefender.h b/FSDefender/CFSDefender.h
index 2c9db22..f3ca788 100644
--- a/FSDefender/CFSDefender.h
+++ b/FSDefender/CFSDefender.h
@@ -174,12 +174,12 @@ struct IrpOperationItem : public SingleListItem
     double              m_dDataEntropy;
     bool                m_fDataEntropyCalculated;
 
-    WCHAR               m_wszFileExtention[MAX_FILE_EXTENTION_LENGTH];
-
     size_t              m_cbFileName;
     CAutoArrayPtr<BYTE> m_pFileName;
-    CAutoArrayPtr<BYTE> m_pFileRenameInfo;
+
     size_t              m_cbFileRenameInfo;
+    CAutoArrayPtr<BYTE> m_pFileRenameInfo;
+    
     bool                m_fCheckForDelete;
 
     IrpOperationItem(ULONG uIrpMajorCode, ULONG uIrpMinorCode, ULONG uPid)
@@ -208,24 +208,6 @@ struct IrpOperationItem : public SingleListItem
         return S_OK;
     }
 
-    NTSTATUS SetFileExtention(LPCWSTR wszFileExtention, size_t cbFileExtention)
-    {
-        NTSTATUS hr = S_OK;
-
-        if (!wszFileExtention || (cbFileExtention >= sizeof(m_wszFileExtention)))
-        {
-            m_wszFileExtention[0] = 0;
-            return S_OK;
-        }
-
-        ASSERT(cbFileExtention < sizeof(m_wszFileExtention));
-
-        hr = CopyStringW(m_wszFileExtention, wszFileExtention, sizeof(m_wszFileExtention));
-        RETURN_IF_FAILED(hr);
-
-        return S_OK;
-    }
-
     NTSTATUS SetFileRenameInfo(LPCWSTR wszFileRename, size_t cbFileRename)
     {
         NTSTATUS hr = S_OK;
@@ -244,6 +226,6 @@ struct IrpOperationItem : public SingleListItem
 
     size_t PureSize() const
     {
-        return sizeof(IrpOperationItem) - sizeof(m_pFileName) + m_cbFileName;
+        return sizeof(IrpOperationItem) - sizeof(m_pFileName) + m_cbFileName - sizeof(m_pFileRenameInfo) + m_cbFileRenameInfo;
     }
 };
\ No newline at end of file
-- 
2.15.0.windows.1

